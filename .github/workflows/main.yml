name: Docker build CI

on:
  push:
    branches: [ master, main ]
  # release:
  #   types: [ published ]
jobs:
  deploy:
    ## Runs on linux self-hosted runner
    runs-on: [self-hosted, linux, x64]
    steps:
      -
        name: Checkout 
        uses: actions/checkout@v2
      -
        name: Cache node modules
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Set up Node and install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: '16.8.0'
      - run: npm i next@latest react@latest react-dom@latest
      - run: npm install --omit=dev
      - run: npm run build

      # -
      #   name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2
      # - 
      #   name: Login to private registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: set lower case owner name
      #   run: |
      #     echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
      #   env:
      #     REPO: '${{ github.repository }}'

      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: 'ghcr.io/${{ env.REPO_LC }}/j6-authy:main-dev-${{ github.run_number }}'


      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@v12
        with:
          image_name: ${{ github.repository }} # it will be lowercased internally
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # dockerfile: ./Dockerfile
          image_tag: "main-dev-${{ github.run_number }}

